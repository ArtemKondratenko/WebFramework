# ASGI

# 1. Что такое веб-приложения? Что такое веб-фреймворк? (Django, FastAPI, Flask, Spring)
# Веб-фреймворк — это то, с помощью чего мы пишем веб-приложения.

# 2. Что такое HTTP?
# HTTP — протокол общения между клиентом и сервером.

# 3. Что такое ASGI?
# Определяет две сущности: сервер и приложение.
# Сервер — это та штука, которая создает сокеты, управляет ими, парсит HTTP сообщения.
# Приложение — это высокоуровневое описание нашего веб-приложения. В него УЖЕ поступает распарсенный HTTP, и ему уже предоставляются готовые функции для отправки ответа клиенту и получения от него тела запроса.

# ASGI абстрагирует сложный технический низкоуровневый слой, связанный с сокетами, позволяя нам писать наше веб-приложения в более высокоуровневом стиле.

# Роутер.

#                         V                      V                             V
# Веб-фреймворк = работа с транспортом, парсинг HTTP сообщений, роутер, отправка ответа.

# import uvicorn


# async def app(scope, receive, send) -> None:
#     await send(
#         {
#             "type": "http.response.start",
#             "status": 200,
#             "headers": [[b"Content-Type", b"text/html"]],
#         }
#     )

#     await send(
#         {
#             "type": "http.response.body",
#             "body": b"<h1>Hello World!</h1>",
#         }
#     )


# uvicorn.run(app)

# scope содержит легковесную информацию о запросе:
# scope = {
#    "type": "http",
#    "path": "/users/vanya",
#    "method": "GET",
#    ...
# }

# receive — это асинхронная функция, которая возвращает тело запроса,
#           причем, возможно, покусочно (т.е. не все сразу).

# send — это асинхронная функция, которая используется для отправки ответа клиенту.
